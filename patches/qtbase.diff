 cmake/QtCompilerFlags.cmake                      |  6 ++--
 cmake/QtCompilerOptimization.cmake               | 14 ++++----
 cmake/QtInternalTargets.cmake                    | 46 ++++++++++++++++++++++--
 config_help.txt                                  |  1 +
 configure.cmake                                  |  5 +++
 qt_cmdline.cmake                                 |  1 +
 src/plugins/platforms/windows/qwindowswindow.cpp |  1 -
 7 files changed, 59 insertions(+), 15 deletions(-)

diff --git a/cmake/QtCompilerFlags.cmake b/cmake/QtCompilerFlags.cmake
index a34aaca20b..d8f488b2c9 100644
--- a/cmake/QtCompilerFlags.cmake
+++ b/cmake/QtCompilerFlags.cmake
@@ -5,18 +5,16 @@
 # property checked below, and is equivalent to qmake's CONFIG += warn_off.
 
 set(_qt_compiler_warning_flags_on "")
-set(_qt_compiler_warning_flags_off "")
+set(_qt_compiler_warning_flags_off "-w")
 
 if (MSVC)
-    list(APPEND _qt_compiler_warning_flags_on /W3)
-    list(APPEND _qt_compiler_warning_flags_off -W0)
+    list(APPEND _qt_compiler_warning_flags_on -W4)
 else()
     if(CMAKE_CXX_COMPILER_ID STREQUAL "GHS") # There is no -Wextra flag for GHS compiler.
         list(APPEND _qt_compiler_warning_flags_on -Wall)
     else()
         list(APPEND _qt_compiler_warning_flags_on -Wall -Wextra)
     endif()
-    list(APPEND _qt_compiler_warning_flags_off -w)
 endif()
 
 set(_qt_compiler_warning_flags_condition
diff --git a/cmake/QtCompilerOptimization.cmake b/cmake/QtCompilerOptimization.cmake
index 4233aece76..3cef343e22 100644
--- a/cmake/QtCompilerOptimization.cmake
+++ b/cmake/QtCompilerOptimization.cmake
@@ -89,14 +89,14 @@ endif()
 
 # Windows MSVC
 if(MSVC)
-    set(QT_CFLAGS_OPTIMIZE "-O2")
-    set(QT_CFLAGS_OPTIMIZE_DEBUG "-Od")
-    set(QT_CFLAGS_OPTIMIZE_SIZE "-O1")
-    set(QT_CFLAGS_OPTIMIZE_VALID_VALUES "/O2" "/O1" "/Od" "/Ob0" "/Ob1" "/Ob2" "/O0" "-O0")
+    set(QT_CFLAGS_OPTIMIZE "-O2 -Ob3 -Oi -Oy")
+    set(QT_CFLAGS_OPTIMIZE_DEBUG "-Od -Ob0")
+    set(QT_CFLAGS_OPTIMIZE_SIZE "-O1 -Ob2")
+    set(QT_CFLAGS_OPTIMIZE_VALID_VALUES "/O2" "/O1" "/Od" "/Ob0" "/Ob1" "/Ob2" "/Ob3" "/O0" "-O0")
 
     if(CLANG)
-        set(QT_CFLAGS_OPTIMIZE_FULL "/clang:-O3")
-        set(QT_CFLAGS_OPTIMIZE_SIZE "/clang:-Oz")
+        set(QT_CFLAGS_OPTIMIZE_FULL "/clang:-O3 -Ob2 -Oi -Oy")
+        set(QT_CFLAGS_OPTIMIZE_SIZE "/clang:-Oz -Ob1")
     endif()
 endif()
 
@@ -124,6 +124,6 @@ if(WASM)
     set(QT_CFLAGS_OPTIMIZE_SIZE "-Os")
     set(QT_CFLAGS_OPTIMIZE_DEBUG "-g2")
 
-    set(QT_CFLAGS_SSE2 -O2 -msimd128 -msse -msse2)
+    set(QT_CFLAGS_SSE2 "-O2 -msimd128 -msse -msse2")
 
 endif()
diff --git a/cmake/QtInternalTargets.cmake b/cmake/QtInternalTargets.cmake
index bf7ef3cf36..024a3a81e6 100644
--- a/cmake/QtInternalTargets.cmake
+++ b/cmake/QtInternalTargets.cmake
@@ -254,14 +254,16 @@ if (MSVC)
     target_compile_options(PlatformCommonInternal INTERFACE
         -Zc:wchar_t
         -bigobj
+        -await:strict
     )
 
     target_compile_options(PlatformCommonInternal INTERFACE
-        $<$<NOT:$<CONFIG:Debug>>:-guard:cf -Gw>
+        $<$<CONFIG:Debug>:-JMC>
+        $<$<NOT:$<CONFIG:Debug>>:-guard:cf -GT -Gw -Gy>
     )
 
     target_link_options(PlatformCommonInternal INTERFACE
-        -DYNAMICBASE -NXCOMPAT -LARGEADDRESSAWARE
+        -DYNAMICBASE -HIGHENTROPYVA -NXCOMPAT -LARGEADDRESSAWARE
         $<$<NOT:$<CONFIG:Debug>>:-OPT:REF -OPT:ICF -GUARD:CF>
     )
 endif()
@@ -284,7 +286,45 @@ if(QT_FEATURE_intelcet)
         )
     else()
         target_compile_options(PlatformCommonInternal INTERFACE
-            -fcf-protection
+            -fcf-protection=full
+        )
+    endif()
+endif()
+
+# Mitigate for Intel Jump Conditional Code (JCC)
+if((TEST_architecture_arch STREQUAL "i386")
+    OR (TEST_architecture_arch STREQUAL "x86_64"))
+    if(MSVC AND NOT CLANG)
+        if(MSVC_VERSION GREATER_EQUAL 1925)
+            target_compile_options(PlatformCommonInternal INTERFACE
+                $<$<NOT:$<CONFIG:Debug>>:-QIntel-jcc-erratum>
+            )
+        endif()
+    else()
+        target_compile_options(PlatformCommonInternal INTERFACE
+            $<$<NOT:$<CONFIG:Debug>>:-Wa,-mno-branches-within-32B-boundaries>
+        )
+    endif()
+endif()
+
+if(QT_FEATURE_spectre)
+    if(CLANG)
+        target_compile_options(PlatformCommonInternal INTERFACE
+            -mretpoline
+        )
+        target_link_options(PlatformCommonInternal INTERFACE
+            -z retpolineplt -z now
+        )
+    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
+        target_compile_options(PlatformCommonInternal INTERFACE
+            -mindirect-branch=thunk
+            -mfunction-return=thunk
+            -mindirect-branch-register
+            -mindirect-branch-cs-prefix
+        )
+    elseif(MSVC)
+        target_compile_options(PlatformCommonInternal INTERFACE
+            -Qspectre-load
         )
     endif()
 endif()
diff --git a/config_help.txt b/config_help.txt
index bd229c43a4..0452b1e9ec 100644
--- a/config_help.txt
+++ b/config_help.txt
@@ -134,6 +134,7 @@ Build options:
   -pch ................. Use precompiled headers [auto]
   -ltcg ................ Use Link Time Code Generation [no]
   -intelcet ............ Use Intel Control-flow Enforcement Technology [no]
+  -spectre ............. Mitigate Spectre security vulnerabilities [no]
   -linker [bfd,gold,lld,mold]
                          Force use of the GNU ld, GNU gold, LLVM/LLD or mold
                          linker instead of default one (GCC and clang only)
diff --git a/configure.cmake b/configure.cmake
index 32b4abb228..ec1bcdefad 100644
--- a/configure.cmake
+++ b/configure.cmake
@@ -987,6 +987,10 @@ qt_feature("intelcet" PRIVATE
     LABEL "Using Intel CET"
     CONDITION ( INPUT_intelcet STREQUAL yes ) OR TEST_intelcet
 )
+qt_feature("spectre" PRIVATE
+    LABEL "Mitigate Spectre security vulnerabilities"
+    CONDITION ( INPUT_spectre STREQUAL yes )
+)
 qt_configure_add_summary_build_type_and_config()
 qt_configure_add_summary_section(NAME "Build options")
 qt_configure_add_summary_build_mode(Mode)
@@ -1037,6 +1041,7 @@ qt_configure_add_summary_entry(ARGS "relocatable")
 qt_configure_add_summary_entry(ARGS "precompile_header")
 qt_configure_add_summary_entry(ARGS "ltcg")
 qt_configure_add_summary_entry(ARGS "intelcet")
+qt_configure_add_summary_entry(ARGS "spectre")
 qt_configure_add_summary_section(NAME "Target compiler supports")
 qt_configure_add_summary_entry(
     TYPE "featureList"
diff --git a/qt_cmdline.cmake b/qt_cmdline.cmake
index c0c875fa78..7a257a4df9 100644
--- a/qt_cmdline.cmake
+++ b/qt_cmdline.cmake
@@ -68,6 +68,7 @@ qt_commandline_option(libudev TYPE boolean)
 qt_commandline_option(linker TYPE optionalString VALUES bfd gold lld mold)
 qt_commandline_option(ltcg TYPE boolean)
 qt_commandline_option(intelcet TYPE boolean)
+qt_commandline_option(spectre TYPE boolean)
 # special case begin
 qt_commandline_option(make TYPE addString VALUES examples libs tests tools
                       benchmarks manual-tests minimal-static-tests)
diff --git a/src/plugins/platforms/windows/qwindowswindow.cpp b/src/plugins/platforms/windows/qwindowswindow.cpp
index 76060f45ee..c8843c5a4e 100644
--- a/src/plugins/platforms/windows/qwindowswindow.cpp
+++ b/src/plugins/platforms/windows/qwindowswindow.cpp
@@ -802,7 +802,6 @@ void WindowCreationData::fromWindow(const QWindow *w, const Qt::WindowFlags flag
     if (topLevel) {
         if ((type == Qt::Window || dialog || tool)) {
             if (!(flags & Qt::FramelessWindowHint)) {
-                style |= WS_POPUP;
                 if (flags & Qt::MSWindowsFixedSizeDialogHint) {
                     style |= WS_DLGFRAME;
                 } else {
