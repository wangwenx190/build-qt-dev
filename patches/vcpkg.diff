 scripts/toolchains/windows.cmake | 33 ++++++++++++++++++++++++---------
 1 file changed, 24 insertions(+), 9 deletions(-)

diff --git a/scripts/toolchains/windows.cmake b/scripts/toolchains/windows.cmake
index 7c8a54989..ec8917694 100644
--- a/scripts/toolchains/windows.cmake
+++ b/scripts/toolchains/windows.cmake
@@ -51,20 +51,35 @@ if(NOT _CMAKE_IN_TRY_COMPILE)
         set(CHARSET_FLAG)
     endif()
 
-    set(CMAKE_CXX_FLAGS " /nologo /DWIN32 /D_WINDOWS /W3 ${CHARSET_FLAG} /GR /EHsc /MP ${VCPKG_CXX_FLAGS}" CACHE STRING "")
-    set(CMAKE_C_FLAGS " /nologo /DWIN32 /D_WINDOWS /W3 ${CHARSET_FLAG} /MP ${VCPKG_C_FLAGS}" CACHE STRING "")
-    set(CMAKE_RC_FLAGS "-c65001 /DWIN32" CACHE STRING "")
+    set(CMAKE_CXX_FLAGS " /nologo /await:strict /bigobj /DWIN32 /D_WINDOWS /DUNICODE /D_UNICODE /W3 ${CHARSET_FLAG} /GR /EHsc /MP /FS /Zc:__cplusplus /ZH:SHA_256 ${VCPKG_CXX_FLAGS}" CACHE STRING "")
+    set(CMAKE_C_FLAGS " /nologo /bigobj /DWIN32 /D_WINDOWS /DUNICODE /D_UNICODE /W3 ${CHARSET_FLAG} /MP /FS /ZH:SHA_256 ${VCPKG_C_FLAGS}" CACHE STRING "")
+    set(CMAKE_RC_FLAGS "/nologo /c65001 /DWIN32" CACHE STRING "")
 
     unset(CHARSET_FLAG)
+    set(GL_FLAG)
+    set(LTCG_FLAG)
+    if(${VCPKG_LIBRARY_LINKAGE} STREQUAL "dynamic")
+        set(GL_FLAG /GL)
+        set(LTCG_FLAG /LTCG)
+    endif()
+
+    set(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG ${VCPKG_CRT_LINK_FLAG_PREFIX}d /Zi /Ob0 /Od /RTC1 ${VCPKG_CXX_FLAGS_DEBUG}" CACHE STRING "")
+    set(CMAKE_C_FLAGS_DEBUG "/D_DEBUG ${VCPKG_CRT_LINK_FLAG_PREFIX}d /Zi /Ob0 /Od /RTC1 ${VCPKG_C_FLAGS_DEBUG}" CACHE STRING "")
+    set(CMAKE_CXX_FLAGS_RELEASE "${VCPKG_CRT_LINK_FLAG_PREFIX} /O2 /Ob3 /Oi /Oy /DNDEBUG /guard:cf ${GL_FLAG} /GT /Gw /Gy /QIntel-jcc-erratum /Qspectre-load /Zc:inline ${VCPKG_CXX_FLAGS_RELEASE}" CACHE STRING "")
+    set(CMAKE_C_FLAGS_RELEASE "${VCPKG_CRT_LINK_FLAG_PREFIX} /O2 /Ob3 /Oi /Oy /DNDEBUG /guard:cf ${GL_FLAG} /GT /Gw /Gy /QIntel-jcc-erratum /Qspectre-load /Zc:inline ${VCPKG_C_FLAGS_RELEASE}" CACHE STRING "")
 
-    set(CMAKE_CXX_FLAGS_DEBUG "/D_DEBUG ${VCPKG_CRT_LINK_FLAG_PREFIX}d /Z7 /Ob0 /Od /RTC1 ${VCPKG_CXX_FLAGS_DEBUG}" CACHE STRING "")
-    set(CMAKE_C_FLAGS_DEBUG "/D_DEBUG ${VCPKG_CRT_LINK_FLAG_PREFIX}d /Z7 /Ob0 /Od /RTC1 ${VCPKG_C_FLAGS_DEBUG}" CACHE STRING "")
-    set(CMAKE_CXX_FLAGS_RELEASE "${VCPKG_CRT_LINK_FLAG_PREFIX} /O2 /Oi /Gy /DNDEBUG /Z7 ${VCPKG_CXX_FLAGS_RELEASE}" CACHE STRING "")
-    set(CMAKE_C_FLAGS_RELEASE "${VCPKG_CRT_LINK_FLAG_PREFIX} /O2 /Oi /Gy /DNDEBUG /Z7 ${VCPKG_C_FLAGS_RELEASE}" CACHE STRING "")
+    unset(GL_FLAG)
+    set(HEVA_FLAG)
+    if(${VCPKG_TARGET_ARCHITECTURE} STREQUAL "x64")
+        set(HEVA_FLAG /HIGHENTROPYVA)
+    endif()
 
     string(APPEND CMAKE_STATIC_LINKER_FLAGS_RELEASE_INIT " /nologo ")
-    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "/nologo /DEBUG /INCREMENTAL:NO /OPT:REF /OPT:ICF ${VCPKG_LINKER_FLAGS} ${VCPKG_LINKER_FLAGS_RELEASE}" CACHE STRING "")
-    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "/nologo /DEBUG /INCREMENTAL:NO /OPT:REF /OPT:ICF ${VCPKG_LINKER_FLAGS} ${VCPKG_LINKER_FLAGS_RELEASE}" CACHE STRING "")
+    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "/nologo /DYNAMICBASE ${HEVA_FLAG} /LARGEADDRESSAWARE ${LTCG_FLAG} /NXCOMPAT /INCREMENTAL:NO /OPT:REF /OPT:ICF /GUARD:CF ${VCPKG_LINKER_FLAGS} ${VCPKG_LINKER_FLAGS_RELEASE}" CACHE STRING "")
+    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "/nologo /DYNAMICBASE ${HEVA_FLAG} /LARGEADDRESSAWARE ${LTCG_FLAG} /NXCOMPAT /TSAWARE /INCREMENTAL:NO /OPT:REF /OPT:ICF /GUARD:CF ${VCPKG_LINKER_FLAGS} ${VCPKG_LINKER_FLAGS_RELEASE}" CACHE STRING "")
+
+    unset(LTCG_FLAG)
+    unset(HEVA_FLAG)
 
     string(APPEND CMAKE_STATIC_LINKER_FLAGS_DEBUG_INIT " /nologo ")
     string(APPEND CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT " /nologo ${VCPKG_LINKER_FLAGS} ${VCPKG_LINKER_FLAGS_DEBUG} ")
